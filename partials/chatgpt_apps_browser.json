{
    "apps": {
        "styles": {
            "disabled": false,
            "rebuild": false,
            "to": "head",
            "tag": "style",
            "dependencies": [],
            "instructions": [
                [
                    "css to style .browser class to have display flex and flex-wrap wrap"
                ]
            ]
        },
        
        "browser": {
            "disabled": false,
            "rebuild": false,
            "to": "body",
            "tag": "script",
            "dependencies": [
                "filesystem",
                "toolbar",
                "registry",
                "app-icon"
            ],
            "instructions": [
                [
                    "1. Create a `browser` function that takes a win and path defaulting to '' parameter:",
                    " - create a container dom element with class `browser`",
                    " - set browserPath to path or `''` if path is undefined or not string",
                    " - generate internal load function that takes path parameter:",
                    "   - set browserPath to path",
                    "   - removes all children of the container element",
                    "   - if path is not empty, create a new `div` with class icon, inner element `.emoji` with internal span element having content 'üîô'  and class `emoji` and on click call load with `path.split('/').slice(0, -1).join('/')`",
                    "   - ls all files in the path and for each item:",
                    "      - call `getOsIcon` with path+'/'+item and load function as callback",
                    "      - add a checkbox with value path+'/'+item that prevent event bubbling",
                    " - execute load on browserPath variable",
                    " - create toolbar",
                    " - call `addButton` on the toolbar with `üìÅ` text and prompt for a name and call mkdir on current browserPath and provided name",
                    " - call `addButton` on the toolbar with `üìÑ` text and prompt for a name and call write on current browserPath and provided name and '' as content",
                    " - call `addButton` on the toolbar with `üóëÔ∏è` text and list all the selected checkbox values, removes them and calls load on the current path",
                    " - return dom element"
                ],
                [
                    "Call register application with 'Browser' title, üìÇ as emoji, browser and 450x400 size"
                ]
            ]
        }
    }
}