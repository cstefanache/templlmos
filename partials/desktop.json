{
    "definition": {
        "head": {
            "_defaults": {
                "prefix": "Generate code only. Stop after the code is generated. Do not provide any explanations.\n### Instruction:\n"
            },
            "style": {
                "_generate": [
                    {
                        "id": "look-and-feel",
                        "disabled": false,
                        "instructions": [
                            "Generate CSS to: ",
                            " - to apply #2E393D background for the body",
                            " - define `.desktop` class with fixed position and 100% width and height"
                        ]
                    },
                    {
                        "id": "desktop-icons",
                        "disabled": false,
                        "instructions": [
                            "css style the `.icon` class to match the following rules:",
                            "1. 64x64px size, text-align center, margin of 5px, pointer cursor",
                            "2. containing `.emoji` class should be a block, have a font-size of 30px",
                            "3. containing `.app-name` class should be a block, have a font-size of 8px, black background,  monospaced font, white text, padding of 5px, allow word-wrap to break word"
                        ]
                    }
                ]
            },
            "script": {
                "_defaults": {
                    "prefix": "Generate browser vanilla JS code without the use of any library or framework.\n### Instruction:\n"
                },
                "_generate": [
                    {
                        "id": "os-icon",
                        "disabled": false,
                        "instructions": [
                            "Create a self executing function that defines a function called `addIcon` on the `window.os.gui` object",
                            "The `addIcon` function takes 3 arguments: `name`, `icon`, `callback` and `container`",
                            "The `name` argument is a string that represents the name of the icon",
                            "The `icon` argument is a string that represents the icon",
                            "The `callback` argument is a function that is called when the icon is clicked",
                            "The `container` argument represents the DOM element of the container where the icon should be appended",
                            "The created root element should have the class `.icon`, and should contain two child elements: `.emoji` and `.app-name`"
                        ]
                    }
                ]
            }
        }
    }
}