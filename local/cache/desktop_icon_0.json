{
    "crc": 3912149728,
    "compiled_instruction": "Write only browser JS, JavaScript, HTML and CSS. Document all function declarations using jsdoc.\n### Instruction:\nGiven the following already defined functions:\n \n\n Define a function called `icon` on `window.os` namespace that takes three parameters: parent, emoji, title and a callback:\n- create a root DOM element with the class `.icon` and add it to `parent`\n- add a span with the class `.emoji` and the emoji as its content\n- add a span with the class `.title` and the title as its content\n- when the icon is clicked, call the callback \n### Response:\n",
    "output": "// Check if window.os exists, if not create it\nif (!window.os) {\n    window.os = {};\n}\n\n/**\n * Create an icon element with an emoji and a tooltip.\n * @param {HTMLElement} parent - The parent element to append this icon to.\n * @param {string} emoji - The emoji to display in this icon.\n * @param {string} title - The tooltip text to display when hovering over this icon.\n * @param {function} callback - The callback to call when this icon is clicked.\n */\nwindow.os.icon = function(parent, emoji, title, callback) {\n    // Create root DOM element with class .icon\n    var icon = document.createElement('div');\n    icon.classList.add('icon');\n    \n    // Create span with class .emoji and add it to icon\n    var emojiSpan = document.createElement('span');\n    emojiSpan.classList.add('emoji');\n    emojiSpan.textContent = emoji;\n    icon.appendChild(emojiSpan);\n    \n    // Create span with class .title and add it to icon\n    var titleSpan = document.createElement('span');\n    titleSpan.classList.add('title');\n    titleSpan.textContent = title;\n    icon.appendChild(titleSpan);\n    \n    // Add click event listener to icon\n    icon.addEventListener('click', callback);\n    \n    // Append icon to parent\n    parent.appendChild(icon);\n};\n\n",
    "library": "/**\n * Create an icon element with an emoji and a tooltip.\n * @param {HTMLElement} parent - The parent element to append this icon to.\n * @param {string} emoji - The emoji to display in this icon.\n * @param {string} title - The tooltip text to display when hovering over this icon.\n * @param {function} callback - The callback to call when this icon is clicked.\n */\nwindow.os.icon = function(parent, emoji, title, callback) { ... }\n"
}