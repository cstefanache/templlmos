{
    "crc": 1529791616,
    "compiled_instruction": "Write only browser JS, JavaScript, HTML and CSS. Document all function declarations using jsdoc.\n### Instruction:\nGiven the following already defined functions:\n \n\n Implement `makeDraggable` on `window.os.gui` object that takes two parameters root and dragHandleHTMLElement with the following functionality:\n - change absolute position of root by dragging the dragHandleHTMLElement \n### Response:\n",
    "output": "if (!window.os) {\n    window.os = {};\n}\nif (!window.os.gui) {\n    window.os.gui = {};\n}\n\n/**\n * Makes an element draggable by a given handle element.\n * @param {HTMLElement} root - The element to be made draggable.\n * @param {HTMLElement} dragHandleHTMLElement - The handle element to initiate the drag operation.\n */\nwindow.os.gui.makeDraggable = function(root, dragHandleHTMLElement) {\n    let isDragging = false;\n    let offsetX = 0;\n    let offsetY = 0;\n    \n    const handleMouseDown = (event) => {\n        isDragging = true;\n        offsetX = event.clientX - root.getBoundingClientRect().left;\n        offsetY = event.clientY - root.getBoundingClientRect().top;\n        \n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', handleMouseUp);\n    };\n    \n    const handleMouseMove = (event) => {\n        if (isDragging) {\n            const x = event.clientX - offsetX;\n            const y = event.clientY - offsetY;\n            \n            // Prevent the element from being dragged off the screen\n            const boundingRect = document.body.getBoundingClientRect();\n            const rootRect = root.getBoundingClientRect();\n            if (x < boundingRect.left || y < boundingRect.top || x + rootRect.width > boundingRect.right || y + rootRect.height > boundingRect.bottom) {\n                return;\n            }\n            \n            root.style.left = `${x}px`;\n            root.style.top = `${y}px`;\n        }\n    };\n    \n    const handleMouseUp = () => {\n        isDragging = false;\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n    };\n    \n    dragHandleHTMLElement.addEventListener('mousedown', handleMouseDown);\n};\n\n",
    "library": "/**\n * Makes an element draggable by a given handle element.\n * @param {HTMLElement} root - The element to be made draggable.\n * @param {HTMLElement} dragHandleHTMLElement - The handle element to initiate the drag operation.\n */\nwindow.os.gui.makeDraggable = function(root, dragHandleHTMLElement) { ... }\n"
}