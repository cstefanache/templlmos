{
    "crc": 4130879903,
    "compiled_instruction": "Write only browser JS, JavaScript, HTML and CSS. Document all function declarations using jsdoc.\n### Instruction:\nGiven the following already defined functions:\n /**\n * Creates a title bar with a title and a close button.\n * @param {HTMLElement} parentElement - The DOM element to append this title bar to.\n * @param {string} title - The title to display in the title bar.\n * @param {function} close - The callback to call when the close button is clicked.\n */\nwindow.os.gui.titleBar = function(parentElement, title, close) { ... }\n\n/**\n * Makes an element draggable by a given handle element.\n * @param {HTMLElement} root - The element to be made draggable.\n * @param {HTMLElement} dragHandleHTMLElement - The handle element to initiate the drag operation.\n */\nwindow.os.gui.makeDraggable = function(root, dragHandleHTMLElement) { ... }\n/**\n* Makes an element resizable by a given handle element.\n* @param {HTMLElement} root - The element to be made resizable.\n* @param {HTMLElement} resizeHandleHTMLElement - The handle element to initiate the resize operation.\n*/\nwindow.os.gui.makeResizable = function(root, resizeHandleHTMLElement) { ... }\n/**\n* Brings the specified DOM node to the front of its siblings.\n* @param {HTMLElement} rootDOMNode - The DOM node to bring to front.\n*/\nwindow.os.gui.bringToFront = function(rootDOMNode) { ... }\n\n\n\n Define a function `createWindow` on the `window.os.gui` object that takes four parameters: emoji, title, width and height that are defaulting to 400 and 300, respectively if not passed and have the following functionality:\n- create a root DOM element with the class `.window`, set the width and height only, and add it to document body in the middle of the document\n- call bringToFront on the root element\n- add and empty div with class `titlePlaceholder` to the root DOM element\n- add and empty div with class `toolbarPlaceholder` to the root DOM element\n- add and empty div with class `contentPlaceholder` to the root DOM element\n- add and empty div with class `statusPlaceholder` to the root DOM element\n- add a resize handle to the root DOM element with class `resizeHandle`\n- add titleBar to `.titlePlaceholder` having the text `emoji + title` and close callback removes root DOM element from the document body\n- make root element draggable by the `.titlePlaceholder` element\n- make root element resizable by the `resizeHandle` element\n- set root DOM element left position document width divided by 2 minus width divided by 2\n- set root DOM element top position document height divided by 2 minus height divided by 2\n- return root DOM element \n### Response:\n",
    "output": "/**\n* Create a new window with given emoji, title, width and height.\n* @param {string} emoji - The emoji to display in the window's title bar.\n* @param {string} title - The title to display in the window's title bar.\n* @param {number} [width=400] - The width of the window in pixels.\n* @param {number} [height=300] - The height of the window in pixels.\n* @return {HTMLElement} The root DOM element of the newly created window.\n*/\nwindow.os.gui.createWindow = function(emoji, title, width = 400, height = 300) {\n    // Create root DOM element\n    const root = document.createElement('div');\n    root.className = 'window';\n    root.style.width = `${width}px`;\n    root.style.height = `${height}px`;\n    document.body.appendChild(root);\n    \n    // Bring to front\n    window.os.gui.bringToFront(root);\n    \n    // Create placeholders for title bar, toolbar, content, status\n    ['titlePlaceholder', 'toolbarPlaceholder', 'contentPlaceholder', 'statusPlaceholder'].forEach(className => {\n        const placeholder = document.createElement('div');\n        placeholder.className = className;\n        root.appendChild(placeholder);\n    });\n    \n    // Create resize handle\n    const resizeHandle = document.createElement('div');\n    resizeHandle.className = 'resizeHandle';\n    root.appendChild(resizeHandle);\n    \n    // Create title bar\n    window.os.gui.titleBar(root.querySelector('.titlePlaceholder'), emoji + ' ' + title, () => document.body.removeChild(root));\n    \n    // Make window draggable by title bar\n    window.os.gui.makeDraggable(root, root.querySelector('.titlePlaceholder'));\n    \n    // Make window resizable by resize handle\n    window.os.gui.makeResizable(root, resizeHandle);\n    \n    // Position window in center of document\n    root.style.position = 'absolute';\n    root.style.left = `${window.innerWidth / 2 - width / 2}px`;\n    root.style.top = `${window.innerHeight / 2 - height / 2}px`;\n    \n    return root;\n};\n\n",
    "library": "/**\n* Create a new window with given emoji, title, width and height.\n* @param {string} emoji - The emoji to display in the window's title bar.\n* @param {string} title - The title to display in the window's title bar.\n* @param {number} [width=400] - The width of the window in pixels.\n* @param {number} [height=300] - The height of the window in pixels.\n* @return {HTMLElement} The root DOM element of the newly created window.\n*/\nwindow.os.gui.createWindow = function(emoji, title, width = 400, height = 300) { ... }\n"
}