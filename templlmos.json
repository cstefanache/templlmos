{
    "models": [
        {
            "repository": "TheBloke/deepseek-coder-6.7B-instruct-GGUF",
            "model": "deepseek-coder-6.7b-instruct.Q5_K_M.gguf",
            "prefix": "### Instruction:\n",
            "suffix": "\n### Response:\n"
        }
    ],
    "defaults": {
        "model": "deepseek-coder-6.7b-instruct.Q5_K_M.gguf",
        "prefix": "### Instruction:\n",
        "suffix": "\n### Response:\n"
    },
    "definition": {
        "head": {
            "_defaults": {
                "prefix": "Generate code only. Stop after the code is generated. Do not provide any explanations.\n### Instruction:\n"
            },
            "style": {
                "_generate": [
                    {
                        "id": "look-and-feel",
                        "disabled": false,
                        "instructions": [
                            "Generate CSS to: ",
                            " - to apply #2E393D background for the body",
                            " - define `.desktop` class with fixed position and 100% width and height"
                        ]
                    },
                    {
                        "id": "title-bar-styles",
                        "disabled": false,
                        "instructions": [
                            "css style for a .titleBar class to follow the following rules:",
                            "1. orange background color, a black bottom border of 1px solid",
                            "2. display of flex, a justify-content of space-between, an align-items of center",
                            "3. monospaced black small text",
                            "4. internal padding of 5px",
                            "5. all buttons should have a black border and small monospaced text and a rounded border of 2px, flat look",
                            "6. do not allow text selection"
                        ]
                    },
                    {
                        "id": "window-container-styles",
                        "disabled": false,
                        "instructions": [
                            "css style for a .windowComponent class to follow the following rules:",
                            "1. white background color and a padding of 1px",
                            "2. a border of 2px solid black",
                            "3. a border-radius of 4px",
                            "4. absolute position",
                            "5. inner .contentPlaceholder class should have a padding of 5px"
                        ]
                    },
                    {
                        "id": "desktop-icons",
                        "disabled": false,
                        "instructions": [
                            "css style the `.app` class to match the following rules:",
                            "1. 64x64px size, text-align center, margin of 5px, pointer cursor",
                            "2. containing `.icon` class should be a block, have a font-size of 30px",
                            "3. containing `.app-name` class should be a block, have a font-size of 8px, black background,  monospaced font, white text, padding of 5px"
                        ]
                    },
                    {
                        "id": "minesweeper-styles",
                        "instructions": [
                            "css style for a .gmroot class to follow the following rules:",
                            "1. text in buttons should be monospaced"
                        ]
                    }
                ]
            },
            "script": {
                "_defaults": {
                    "prefix": "Generate a single javascript function code. Stop at end of script. Do not provide any code details, examples or descriptions.\n### Instruction:\n"
                },
                "_generate": [
                    {
                        "id": "desktop-add-action",
                        "rebuild": false,
                        "disabled": false,
                        "instructions": [
                            "create a function called `addDesktop` that takes as parameters a name, a character and a function:",
                            "  * create a root div element with the class `app`",
                            "  * append the root element to the `.desktop` element",
                            "  * append the character in a div with the class `.icon` to the root element",
                            "  * add a span element with the class `app-name` and the text of the name parameter",
                            "  * when root div element is clicked execute the function passed as the second parameter"
                        ]
                    },
                    {
                        "id": "title-bar",
                        "disabled": false,
                        "instructions": [
                            "Create a function called `titleBar` that will accept two parameters: a title and a DOM element.",
                            " create a root DOM element with the class `.titleBar`",
                            " add to the root DOM element a `span` containing the title parameter",
                            " add to the root DOM element a `button` with the text `x`",
                            " when the button is clicked then the DOM element passed as the second parameter should be removed from the body",
                            " when root DOM element is dragged then move the DOM element passed as the second parameter",
                            " return the root DOM element"
                        ],
                        "instruction-old": "Create a function called `titleBar` that will accept two parameters: a title and a callback for the close button and returns DOM element containing a span title and a close 'x' button aligned to the right. the class of the root DOM element should be .titleBar"
                    },
                    {
                        "id": "window",
                        "instructions": [
                            "Create a function called windowComponent that takes two parameters: title, content (as DOM element) and another two with and height that are defaulting to 400 and 300, respectively if not passed:",
                            "  * Creates a DOM element with the class `windowComponent` with the width and height passed to parameters, that contains two empty placeholders: `.titlePlaceholder` and `.contentPlaceholder`.",
                            "  * Defines a constant `tb` with the result of executing a already defined function `titleBar` with the title parameter and root DOM element as the second parameter",
                            "  * Appends the `tb` to the `.titlePlaceholder`",
                            "  * Appends the content parameter as dom child to the `.contentPlaceholder`",
                            "  * Append the root dom element to document body"
                        ]
                    }
                ]
            }
        },
        "body": {
            "script": {
                "_defaults": {
                    "prefix": "Generate a single javascript function code using only vanilla javascript. Stop at end of script. Do not provide any code details, examples or descriptions.\n### Instruction:\n"
                },
                "_generate": [
                    {
                        "id": "desktop",
                        "instruction": "create a dom element with the class `.desktop` and append it to the body"
                    },
                    {
                        "id": "minesweeper",
                        "instructions": [
                            "Create a `minesweeper` function that:",
                            "* creates a root dom element with the class `gmroot`",
                            "* generate a matrix of 8x8 with values 0",
                            "* pick a random of 3 cells and set their value to `x`",
                            "* set the neighboring cells to the `x` cells to the number of `x` cells around them",
                            "* iterate through the matrix and for each row add a div dom element and for each item add a button with the class `cell` and  `.` as content. when the button is clicked, the content should be replaced with the value. when the user clicks on a cell with value `x` the game should end and the user should be notified",
                            "* calls already existing function `windowComponent` with the parameters: 'Minesweeper', the created root element as the content, 202 and 220"
                        ]
                    },
                    {
                        "id": "tic-tac-toe",
                        "instructions": [
                            "create a `tictactoe` function that:",
                            " - create a root dom element with the class `gmroot`",
                            " - store current player as `x`",
                            " - make a 3x3 grid of buttons, a row is a div with the class `row` and a button with the class `cell` each having `.` as content",
                            " - when a button is clicked then the content should be set to the current player and the current player should be toggled",
                            " - calls the `windowComponent` function with the parameters: 'Tic Tac Toe', the created root element as the content, 202 and 220"
                        ]
                    },
                    {
                        "_defaults": {
                            "prefix": "JS Functions `addDesktop` and `minesweeper` are already defined. Generate javascript code only without any explanations or examples. Stop after the code is generated.\n### Instruction:\n"
                        },
                        "id": "executions",
                        "instructions": [
                            "call `addDesktop` it with the following parameters \"minesweeper\", ```String.fromCodePoint(0x0001F4A3)``` and minesweeper (the function reference)",
                            "call `addDesktop` it with the following parameters \"tic-tac-toe\", ```String.fromCodePoint(0x274C)``` and tictactoe (the function reference)"
                        ]
                    }
                ]
            }
        }
    }
}