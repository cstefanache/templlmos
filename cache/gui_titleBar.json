{
    "crc": 1322394902,
    "compiled_instruction": [
        "You are a frontend web developer, do not use jquery that writes only browser JS, JavaScript, HTML and CSS\n### Instruction:\n\n\n Define a function called `titleBar` object on `window.os.gui` that takes two parameter: parentElement (DOM element), title (string), and a callback `close` and has the following functionality:\n- create a root DOM element with the class `.titleBar`\n- add to the root DOM element a `span` containing the title parameter\n- add to the root DOM element a `button` with the text `\u274c` and class `close` that calls the close callback\n- append the root DOM element to parentElement \n### Response:\n"
    ],
    "output": [
        "Here is the code in JavaScript to define the `titleBar` function:\n\n```javascript\nif (!window.os) {\n    window.os = {};\n}\nif (!window.os.gui) {\n    window.os.gui = {};\n}\n\nwindow.os.gui.titleBar = function(parentElement, title, close) {\n    // Create root DOM element with class .titleBar\n    var root = document.createElement('div');\n    root.className = 'titleBar';\n    \n    // Create span containing the title parameter\n    var span = document.createElement('span');\n    span.textContent = title;\n    root.appendChild(span);\n    \n    // Create button with text '\u274c' and class 'close'\n    var button = document.createElement('button');\n    button.textContent = '\u274c';\n    button.className = 'close';\n    button.addEventListener('click', close); // Add click event listener to the button\n    root.appendChild(button);\n    \n    // Append root DOM element to parentElement\n    parentElement.appendChild(root);\n};\n\n```"
    ],
    "library": "This JavaScript function creates a title bar with a title and a close button. The title bar is appended to the parent element provided as an argument to the function. \n\nHere's how you can use this function in your code:\n\n```javascript\n// Get some element to serve as parent for title bar\nvar parentElement = document.getElementById('myElementId'); \n\n// Define what should happen when close button is clicked\nvar closeFunction = function() { \n  // Your code here to handle close event \n}; \n\n// Call titleBar function to create title bar \nwindow.os.gui.titleBar(parentElement, 'My Title', closeFunction); \n```\nIn this example, we first get an element with id 'myElementId' and store it in `parentElement` variable. Then we define `closeFunction` which will be called when close button is clicked. Finally, we call `titleBar` function with `parentElement`, 'My Title' and `closeFunction` as arguments to create title bar with specified title and close event handler. \n\nPlease replace 'My Title' and `closeFunction` with your own values as per your requirements. The `closeFunction` should be defined to handle close event as per your application's logic. \n\nThis function does not return any value, it only creates and appends DOM elements to parent element. If you want to manipulate created elements later, you should store them in variables and use them as needed.\n\n```",
    "library_input": "### Instruction:\nYou are a javascript developer that documents all the declared functions by providing sample usage.\n```\n if (!window.os) {\n    window.os = {};\n}\nif (!window.os.gui) {\n    window.os.gui = {};\n}\n\nwindow.os.gui.titleBar = function(parentElement, title, close) {\n    // Create root DOM element with class .titleBar\n    var root = document.createElement('div');\n    root.className = 'titleBar';\n    \n    // Create span containing the title parameter\n    var span = document.createElement('span');\n    span.textContent = title;\n    root.appendChild(span);\n    \n    // Create button with text '\u274c' and class 'close'\n    var button = document.createElement('button');\n    button.textContent = '\u274c';\n    button.className = 'close';\n    button.addEventListener('click', close); // Add click event listener to the button\n    root.appendChild(button);\n    \n    // Append root DOM element to parentElement\n    parentElement.appendChild(root);\n};\n\n \n```\n### Response:\n"
}