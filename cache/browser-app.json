{"compiled_instruction": "Generate browser vanilla JS code without the use of any library or framework. All the `os` functions are already defined on global scope.\n### Instruction:\n Create a self executing function that defines a function called `browser` on the `window.os.apps` object having the following functionality:\nThe `browser` function accepts one parameter `path` and have the following functionality:\n - creates a new root `div` element with the class `browser`\n - call `os.gui.createWindow` with the following parameters: `Browser, created DOM element and store the returned value to constant `win`\n - call `os.gui.toolbar(win)` and store the returned value to constant `toolbar`\n - call `toolbar.addButton ('\ud83d\udcc1', () => os.gui.createPrompt('Enter folder name', name => os.fs.mkdir(path, name); refresh())`\n - call `toolbar.addButton ('\ud83d\udcc4', () => os.gui.createPrompt('Enter folder name', name => os.fs.write(path+'/'+ name, \"\"); refresh())`\n - call `toolbar.addButton ('\ud83d\uddd1\ufe0f', () => os.fs.rm(path); updates path to remove the last iterm after `/` and refresh)`\n - create an internal refresh function that:\n  * removes all the children of the root element\n  * call `os.gui.updateStatus` on `win` element to `path`\n  * store into `files` constant execution of `os.fs.ls`\n  * if lenght of path is bigger than 1 then call `os.gui.addIcon` with the exact following parameters: `..`, `'\ud83d\udd19'`, and a callback that updates path to remove the last iterm after `/` and refresh and root DOM element\n  * for each file in the `files` array, do the following:\n    * save to variable `isFile` the execution of `os.fs.isFile` with the parameter `path + '/' + name`\n    * create a callback function that calls if `isFile` call `os.apps.ide` or set path to `path + '/' + name` and call `refresh()`\n    * calls `os.gui.addIcon` with the exact following parameters: `name`, `'\ud83d\udcc4'` if isFile is true, `'\ud83d\udcc1'` otherwise, callback function and the created root DOM element \n### Response:\n", "output": "Here is your requested JavaScript code:\n\n```javascript\n(function() {\n    window.os = window.os || {};\n    window.os.apps = window.os.apps || {};\n    \n    window.os.apps.browser = function(path) {\n        const root = document.createElement('div');\n        root.className = 'browser';\n        document.body.appendChild(root);\n        \n        const win = os.gui.createWindow('Browser', root);\n        const toolbar = os.gui.toolbar(win);\n        \n        toolbar.addButton('\ud83d\udcc1', () => {\n            os.gui.createPrompt('Enter folder name', name => {\n                os.fs.mkdir(path, name);\n                refresh();\n            });\n        });\n        \n        toolbar.addButton('\ud83d\udcc4', () => {\n            os.gui.createPrompt('Enter file name', name => {\n                os.fs.write(path + '/' + name, \"\");\n                refresh();\n            });\n        });\n        \n        toolbar.addButton('\ud83d\uddd1\ufe0f', () => {\n            os.fs.rm(path);\n            path = path.substring(0, path.lastIndexOf('/'));\n            refresh();\n        });\n        \n        const refresh = () => {\n            while (root.firstChild) {\n                root.removeChild(root.firstChild);\n            }\n            \n            os.gui.updateStatus(win, path);\n            \n            const files = os.fs.ls(path);\n            \n            if (path.length > 1) {\n                os.gui.addIcon('..', '\ud83d\udd19', () => {\n                    path = path.substring(0, path.lastIndexOf('/'));\n                    refresh();\n                }, root);\n            }\n            \n            files.forEach(name => {\n                const isFile = os.fs.isFile(path + '/' + name);\n                \n                const callback = () => {\n                    if (isFile) {\n                        os.apps.ide(path + '/' + name);\n                    } else {\n                        path = path + '/' + name;\n                    }\n                    refresh();\n                };\n                \n                os.gui.addIcon(name, isFile ? '\ud83d\udcc4' : '\ud83d\udcc1', callback, root);\n            });\n        };\n        \n        refresh();\n    };\n})();\n\n```"}