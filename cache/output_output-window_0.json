{
    "crc": 3499549703,
    "compiled_instruction": "Write only browser JS, JavaScript, HTML and CSS. Document all function declarations using jsdoc.\n### Instruction:\nGiven the following already defined functions:\n \n\n use browser fetch for API requests\ncrate a root container div element having the class `output-wrapper` and id `output-wrapper`\ncreate and append to root container a pre element having the class `output` and id `output`\nstore empty string in a variable `content`\ncreate an internal function fetches the content from 'http://localhost:8080/output' if the data differes from the content: sets the innerHTML of the pre element to the fetched content and  scroll output to bottom\ncalls http://localhost:8080/ping and if the response is 200 then set an interval to call the internal function every 1000ms \n### Response:\n",
    "output": "// Create root container div element\nlet rootContainer = document.createElement('div');\nrootContainer.className = 'output-wrapper';\nrootContainer.id = 'output-wrapper';\ndocument.body.appendChild(rootContainer);\n\n// Create pre element\nlet output = document.createElement('pre');\noutput.className = 'output';\noutput.id = 'output';\nrootContainer.appendChild(output);\n\n// Store empty string in content variable\nlet content = '';\n\n// Internal function to fetch content from 'http://localhost:8080/output'\nasync function fetchContent() {\n    let response = await fetch('http://localhost:8080/output');\n    let newContent = await response.text();\n    if (newContent !== content) {\n        content = newContent;\n        output.innerHTML = content;\n        output.scrollTop = output.scrollHeight; // Scroll to bottom\n    }\n}\n\n// Fetch http://localhost:8080/ping\nfetch('http://localhost:8080/ping')\n    .then(response => {\n        if (response.status === 200) {\n            // If response is 200, set an interval to call the internal function every 1000ms\n            setInterval(fetchContent, 1000);\n        }\n    });\n\n",
    "library": ""
}