{
    "crc": 3398919290,
    "compiled_instruction": [
        "do not use jquery.\n `window.os` object is already defined.\n### Instruction:\n Implement the following functions on the `window.os` object under `gui` key:\n- `move(root, dragHandle)` - move the root element by dragging the dragHandle element\n- `resize(root, resizeHandle)` - resize the root element by dragging the resizeHandle element \n### Response:\n"
    ],
    "output": [
        "To implement these functions, you would need to handle mouse events such as mousedown, mouseup and mousemove to track the movement and resizing of elements. Here's a simple implementation using plain JavaScript:\n\n```javascript\n// Assuming window.os is already defined\nif (!window.os) {\n    window.os = {};\n}\n\n// Assuming window.os.gui is already defined\nif (!window.os.gui) {\n    window.os.gui = {};\n}\n\n// Move function\nwindow.os.gui.move = function (root, dragHandle) {\n    let offsetX = 0;\n    let offsetY = 0;\n    \n    dragHandle.addEventListener('mousedown', (e) => {\n        offsetX = e.clientX - root.getBoundingClientRect().left;\n        offsetY = e.clientY - root.getBoundingClientRect().top;\n        \n        document.addEventListener('mousemove', mouseMove);\n        document.addEventListener('mouseup', mouseUp);\n    });\n    \n    function mouseMove(e) {\n        root.style.left = (e.clientX - offsetX) + 'px';\n        root.style.top = (e.clientY - offsetY) + 'px';\n    }\n    \n    function mouseUp() {\n        document.removeEventListener('mousemove', mouseMove);\n        document.removeEventListener('mouseup', mouseUp);\n    }\n};\n\n// Resize function\nwindow.os.gui.resize = function (root, resizeHandle) {\n    let width = root.offsetWidth;\n    let height = root.offsetHeight;\n    \n    resizeHandle.addEventListener('mousedown', (e) => {\n        document.addEventListener('mousemove', mouseMove);\n        document.addEventListener('mouseup', mouseUp);\n    });\n    \n    function mouseMove(e) {\n        width += e.clientX - resizeHandle.getBoundingClientRect().left;\n        height += e.clientY - resizeHandle.getBoundingClientRect().top;\n        \n        root.style.width = width + 'px';\n        root.style.height = height + 'px';\n    }\n    \n    function mouseUp() {\n        document.removeEventListener('mousemove', mouseMove);\n        document.removeEventListener('mouseup', mouseUp);\n    }\n};\n\n```"
    ],
    "library": "The provided code defines two methods, `move` and `resize`, under the namespace `window.os.gui`. Here are the list of these methods prefixed with `window.os.gui`:\n\n1. `window.os.gui.move(root, dragHandle)` - This method allows the user to move a DOM element by dragging it around the screen using a drag handle. The element to be moved is specified by the 'root' parameter, while the drag handle is specified by the 'dragHandle' parameter. The method uses the 'mousedown', 'mousemove', and 'mouseup' events to implement the drag functionality.\n\n2. `window.os.gui.resize(root, resizeHandle)` - This method allows the user to resize a DOM element by dragging a resize handle at the bottom-right corner of the element. The element to be resized is specified by the 'root' parameter, while the resize handle is specified by the 'resizeHandle' parameter. The method uses the 'mousedown', 'mousemove', and 'mouseup' events to implement the resize functionality. The width and height of the element are updated as the mouse moves across the screen, creating the illusion of resizing the element by dragging it to the desired size.\n\n```"
}