{
    "crc": 1343509409,
    "compiled_instruction": "Write only browser JS, JavaScript, HTML and CSS. Document all function declarations using jsdoc.\n### Instruction:\nGiven the following already defined functions:\n \n\n create function `createToolbar` on the `window.os.gui` object and generate jsdoc that takes one HTMLElement parameter `win`\n- create a root DOM element with the class `.toolbar`\n- append the root DOM element to the `.toolbarPlaceholder` from `win` HTML element\n- create internal function `addButton` that takes two parameters: text and callback that adds a button to the root DOM element with the text parameter and call the callback when the button is clicked\n- return internal addButton function \n### Response:\n",
    "output": "/**\n * Create a toolbar with a button inside it.\n * @param {HTMLElement} win - The window element to add toolbar to.\n * @returns {function(string, function): void} - The addButton function.\n */\nwindow.os.gui.createToolbar = function(win) {\n    // Create a root DOM element with class .toolbar\n    var toolbar = document.createElement('div');\n    toolbar.className = 'toolbar';\n    \n    // Append the root DOM element to .toolbarPlaceholder from win HTML element\n    win.querySelector('.toolbarPlaceholder').appendChild(toolbar);\n    \n    /**\n     * Add a button to the toolbar with a specific text and callback when clicked.\n     * @param {string} text - The text to display on the button.\n     * @param {function} callback - The callback to call when the button is clicked.\n     */\n    var addButton = function(text, callback) {\n        // Create a button element with text parameter\n        var button = document.createElement('button');\n        button.textContent = text;\n        \n        // Add event listener to call callback when button is clicked\n        button.addEventListener('click', callback);\n        \n        // Append button to toolbar root element\n        toolbar.appendChild(button);\n    };\n    \n    // Return addButton function\n    return addButton;\n};\n\n",
    "library": "/**\n * Create a toolbar with a button inside it.\n * @param {HTMLElement} win - The window element to add toolbar to.\n * @returns {function(string, function): void} - The addButton function.\n */\nwindow.os.gui.createToolbar = function(win) { ... }\n"
}