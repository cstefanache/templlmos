{"compiled_instruction": "Generate a single javascript function code. Stop at end of script. Do not provide any code details, examples or descriptions.\n### Instruction:\n Create a function called `titleBar` that will accept two parameters: a title and a DOM element.\n create a root DOM element with the class `.titleBar`\n add to the root DOM element a `span` containing the title parameter\n add to the root DOM element a `button` with the text `x`\n when the button is clicked then the DOM element passed as the second parameter should be removed from the body\n when root DOM element is dragged then move the DOM element passed as the second parameter\n return the root DOM element \n### Response:\n", "output": "Here is a JavaScript function named `titleBar` that fulfills your requirements:\n\n```javascript\nfunction titleBar(title, domElement) {\n    // Create root DOM element with class 'titleBar'\n    let root = document.createElement('div');\n    root.classList.add('titleBar');\n    \n    // Add span containing title parameter to root\n    let span = document.createElement('span');\n    span.textContent = title;\n    root.appendChild(span);\n    \n    // Add button with text 'x' to root\n    let button = document.createElement('button');\n    button.textContent = 'x';\n    button.addEventListener('click', () => document.body.removeChild(domElement));\n    root.appendChild(button);\n    \n    // Add drag event listener to root to move domElement\n    let isDragging = false;\n    let offsetX = 0;\n    let offsetY = 0;\n    \n    root.addEventListener('mousedown', (e) => {\n        isDragging = true;\n        offsetX = e.offsetX;\n        offsetY = e.offsetY;\n    });\n    \n    document.addEventListener('mousemove', (e) => {\n        if (isDragging) {\n            let x = e.clientX - offsetX;\n            let y = e.clientY - offsetY;\n            domElement.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n        }\n    });\n    \n    document.addEventListener('mouseup', () => {\n        isDragging = false;\n    });\n    \n    return root;\n}\n\n```"}