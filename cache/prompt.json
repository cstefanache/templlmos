{"compiled_instruction": "Generate browser vanilla JS code without the use of any library or framework.\n### Instruction:\n Create a self executing function that defines a function called `createPrompt` on the `window.os.gui` object\nThe `prompt` function takes two parameters: title and a callback:\n* creates a root dom element with the class `editor`\n* add a text input element to the root dom element full width\n* add a button element to the root dom element and set the text to `OK`\n* call `os.gui.createWindow` with the following parameters: `title` parameter, created root DOM element, `300`, `100` and save the result in a variable named `win`\n* when the button is clicked call the callback with the value of the input element and remove the win element from the body \n### Response:\n", "output": "Here is an example of how you can implement this in JavaScript:\n\n```javascript\n(function() {\n    if (!window.os) window.os = {};\n    if (!window.os.gui) window.os.gui = {};\n    \n    window.os.gui.createPrompt = function(title, callback) {\n        // create root dom element with class 'editor'\n        var root = document.createElement('div');\n        root.className = 'editor';\n        \n        // add text input element to root dom element full width\n        var input = document.createElement('input');\n        input.style.width = '100%';\n        root.appendChild(input);\n        \n        // add button element to root dom element and set text to 'OK'\n        var button = document.createElement('button');\n        button.textContent = 'OK';\n        root.appendChild(button);\n        \n        // call os.gui.createWindow with given parameters\n        var win = window.os.gui.createWindow(title, root, 300, 100);\n        \n        // when button is clicked, call callback with input value and remove win element from body\n        button.addEventListener('click', function() {\n            callback(input.value);\n            document.body.removeChild(win);\n        });\n    };\n})();\n\n```"}