{
    "crc": 4293484015,
    "compiled_instruction": [
        "You are a frontend web developer, do not use jquery that writes only browser JS, JavaScript, HTML and CSS\n### Instruction:\nGiven the following examples:\n This JavaScript code defines a `registerApplication` function on the `os` object of the `window` object. This function is used to register an application with the operating system. \n\nHere's how you can use it:\n\n```javascript\n// Assume window.os.gui and window.os.addApp and window.os.registerExtension are already defined elsewhere in your code\n\n// Define your application's title, emoji and callback function\nconst title = \"My App\";\nconst emoji = \"\ud83d\ude80\";\nconst callback = (appWindow, param1, param2) => {\n  // Your code here to create and return content for your application window\n};\nconst width = 800;  // Optional, default is 400\nconst height = 600;  // Optional, default is 400\nconst extensions = [\"ext1\", \"ext2\"];  // Optional, default is undefined\n\n// Register your application with the operating system\nwindow.os.registerApplication(title, emoji, callback, width, height, extensions);\n```\n\nIn this example, `callback` is a function that is called when your application is launched and is responsible for creating and returning content for your application window. The `appWindow` parameter is an instance of your application window and `param1` and `param2` are additional parameters passed to your `callback` function when your application is launched. \n\nThe `width` and `height` parameters specify the initial size of your application window and they default to 400 if not provided. \n\nThe `extensions` parameter is an optional array of extension names to be registered with your application. If provided, each extension will be registered with your application's `emoji` and `execute` function. \n\nFinally, `window.os.addApp` is called with your application's `emoji`, `title` and `execute` function to add your application to the operating system's list of applications. \n\nThis is just an example of how you might use this `registerApplication` function in your code. The actual implementation of `window.os.gui`, `window.os.addApp` and `window.os.registerExtension` would depend on how these functions and objects are defined elsewhere in your code.\n\n```\n\n 1. Create a callback function `minesweeper` that:\n - creates a root dom element with the class `gmroot`\n - generate a matrix of 8x8 with values 0\n - pick a random of 10 cells and set their value to -40 and increase the number value of the neighbouring cells\n - set score to 64\n - add a div with the class `score` and the content `Discovered: 64` to the root dom element\n - iterate through the matrix and for each row add a div element with the class `.row` and for each item add a div with the class `cell`,  ` ` as content and add data-x and data-y as attributes. when the div is clicked call `reveal` function for the current x and y\n - define internal function reveal that:\n   - get div at x and y using data-x and data-y attributes\n   - if the div is already revealed return\n   - set the div content to the value of the cell and add class `.visited` to the div\n   - if the div has am integer value smaller than 0 set the div content to `\ud83d\udca3` and call `alert` with the message `Game Over` and the title `\ud83d\udca3 minesweeper`\n   - else decrease the score by 1 and update the score div content to `Discovered: ${score}`\n   - if the div has an integer value of 0 call `reveal` for all the neighbouring cells\n - return root element\n2. Call register application with 'Minesweeper' title, \ud83d\udca3 as emoji, `minesweeper` callback function reference and 300x300 size \n### Response:\n"
    ],
    "output": [
        "function minesweeper(appWindow, param1, param2) {\n    // Create root element\n    const root = document.createElement('div');\n    root.className = 'gmroot';\n    \n    // Generate matrix\n    let matrix = Array(8).fill().map(() => Array(8).fill(0));\n    \n    // Pick 10 random cells and increase neighbouring cells' values\n    let mines = Array(10).fill().map(() => [Math.floor(Math.random() * 8), Math.floor(Math.random() * 8)]);\n    mines.forEach(([x, y]) => {\n        matrix[x][y] = -40;\n        for (let dx = -1; dx <= 1; dx++) {\n            for (let dy = -1; dy <= 1; dy++) {\n                let nx = x + dx, ny = y + dy;\n                if (nx >= 0 && nx < 8 && ny >= 0 && ny < 8) {\n                    matrix[nx][ny]++;\n                }\n            }\n        }\n    });\n    \n    // Set score to 64\n    let score = 64;\n    \n    // Add score div\n    let scoreDiv = document.createElement('div');\n    scoreDiv.className = 'score';\n    scoreDiv.textContent = `Discovered: ${score}`;\n    root.appendChild(scoreDiv);\n    \n    // Add matrix to root element\n    for (let x = 0; x < 8; x++) {\n        let rowDiv = document.createElement('div');\n        rowDiv.className = 'row';\n        for (let y = 0; y < 8; y++) {\n            let cellDiv = document.createElement('div');\n            cellDiv.className = 'cell';\n            cellDiv.textContent = ' ';\n            cellDiv.dataset.x = x;\n            cellDiv.dataset.y = y;\n            cellDiv.addEventListener('click', () => reveal(x, y));\n            rowDiv.appendChild(cellDiv);\n        }\n        root.appendChild(rowDiv);\n    }\n    \n    // Define reveal function\n    const reveal = (x, y) => {\n        let cellDiv = root.querySelector(`[data-x=\"${x}\"][data-y=\"${y}\"]`);\n        if (cellDiv.classList.contains('visited')) {\n            return;\n        }\n        let value = matrix[x][y];\n        cellDiv.textContent = value < 0 ? '\ud83d\udca3' : value;\n        cellDiv.classList.add('visited');\n        if (value < 0) {\n            alert('Game Over');\n        } else {\n            score--;\n            scoreDiv.textContent = `Discovered: ${score}`;\n            if (value === 0) {\n                for (let dx = -1; dx <= 1; dx++) {\n                    for (let dy = -1; dy <= 1; dy++) {\n                        let nx = x + dx, ny = y + dy;\n                        if (nx >= 0 && nx < 8 && ny >= 0 && ny < 8) {\n                            reveal(nx, ny);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    \n    return root;\n}\n\n// Register application\nconst title = \"Minesweeper\";\nconst emoji = \"\ud83d\udca3\";\nconst width = 300;\nconst height = 300;\nwindow.os.registerApplication(title, emoji, minesweeper, width, height);\n\n"
    ]
}