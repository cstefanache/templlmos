{
    "crc": 461410914,
    "compiled_instruction": "\nYou are a code generator that produces JavaScript code exclusively using vanilla JavaScript that will execute in a browser window. When responding to queries, provide only valid and complete JavaScript code without any additional explanations or comments. Do not include any frameworks or libraries such as jQuery, React, or others. Follow best practices for vanilla JavaScript and ensure compatibility with modern browsers. Do not write node or server-side code.\n\nGiven the following implemented functions:\n/**\n * Registers a new application with the specified title, emoji, callback, dimensions, and optional extensions.\n * @param {string} title - The title of the application.\n * @param {string} emoji - The emoji to display for the application.\n * @param {function} callback - The function to call when the application is executed.\n * @param {number} [width=400] - The width of the application window.\n * @param {number} [height=400] - The height of the application window.\n * @param {Array} [extensions] - An optional array of extensions to register with the application.\n */\nwindow.os.registerApplication = function(title, emoji, callback, width = 400, height = 400, extensions) { ... }\n\n\n\nCreate a callback function `minesweeper` that:\n - creates a root dom element with the class `gmroot`\n - generate a matrix of 8x8 with values 0\n - pick a random of 10 cells and set their value to -40 and increase the number value of the neighbouring cells\n - set score to 64\n - add a div with the class `score` and the content `Discovered: 64` to the root dom element\n - iterate through the matrix and for each row add a div element with the class `.row` and for each item add a div with the class `cell`,  ` ` as content and add data-x and data-y as attributes. when the div is clicked call `reveal` function for the current x and y\n - define internal function reveal that:\n   - get div at x and y using data-x and data-y attributes\n   - if the div is already revealed return\n   - set the div content to the value of the cell and add class `.visited` to the div\n   - if the div has am integer value smaller than 0 set the div content to `\ud83d\udca3` and call `alert` with the message `Game Over` and the title `\ud83d\udca3 minesweeper`\n   - else decrease the score by 1 and update the score div content to `Discovered: ${score}`\n   - if the div has an integer value of 0 call `reveal` for all the neighbouring cells\n - return root element\n",
    "result": "```javascript\nfunction minesweeper() {\n    const root = document.createElement('div');\n    root.className = 'gmroot';\n\n    const matrix = Array.from({ length: 8 }, () => Array(8).fill(0));\n    const totalMines = 10;\n    let score = 64;\n\n    // Place mines and update neighboring cells\n    for (let i = 0; i < totalMines; i++) {\n        let x, y;\n        do {\n            x = Math.floor(Math.random() * 8);\n            y = Math.floor(Math.random() * 8);\n        } while (matrix[x][y] === -40);\n        matrix[x][y] = -40;\n\n        for (let dx = -1; dx <= 1; dx++) {\n            for (let dy = -1; dy <= 1; dy++) {\n                if (dx === 0 && dy === 0) continue;\n                const nx = x + dx;\n                const ny = y + dy;\n                if (nx >= 0 && nx < 8 && ny >= 0 && ny < 8 && matrix[nx][ny] !== -40) {\n                    matrix[nx][ny]++;\n                }\n            }\n        }\n    }\n\n    const scoreDiv = document.createElement('div');\n    scoreDiv.className = 'score';\n    scoreDiv.textContent = `Discovered: ${score}`;\n    root.appendChild(scoreDiv);\n\n    function reveal(x, y) {\n        const cellDiv = document.querySelector(`.cell[data-x=\"${x}\"][data-y=\"${y}\"]`);\n        if (cellDiv.classList.contains('visited')) return;\n\n        cellDiv.classList.add('visited');\n        cellDiv.textContent = matrix[x][y];\n\n        if (matrix[x][y] < 0) {\n            cellDiv.textContent = '\ud83d\udca3';\n            alert('Game Over', '\ud83d\udca3 minesweeper');\n        } else {\n            score--;\n            scoreDiv.textContent = `Discovered: ${score}`;\n            if (matrix[x][y] === 0) {\n                for (let dx = -1; dx <= 1; dx++) {\n                    for (let dy = -1; dy <= 1; dy++) {\n                        const nx = x + dx;\n                        const ny = y + dy;\n                        if (nx >= 0 && nx < 8 && ny >= 0 && ny < 8) {\n                            reveal(nx, ny);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (let i = 0; i < 8; i++) {\n        const rowDiv = document.createElement('div');\n        rowDiv.className = 'row';\n        for (let j = 0; j < 8; j++) {\n            const cellDiv = document.createElement('div');\n            cellDiv.className = 'cell';\n            cellDiv.setAttribute('data-x', i);\n            cellDiv.setAttribute('data-y', j);\n            cellDiv.textContent = ' ';\n            cellDiv.addEventListener('click', () => reveal(i, j));\n            rowDiv.appendChild(cellDiv);\n        }\n        root.appendChild(rowDiv);\n    }\n\n    return root;\n}\n```",
    "output": "function minesweeper() {\n    const root = document.createElement('div');\n    root.className = 'gmroot';\n\n    const matrix = Array.from({ length: 8 }, () => Array(8).fill(0));\n    const totalMines = 10;\n    let score = 64;\n\n    // Place mines and update neighboring cells\n    for (let i = 0; i < totalMines; i++) {\n        let x, y;\n        do {\n            x = Math.floor(Math.random() * 8);\n            y = Math.floor(Math.random() * 8);\n        } while (matrix[x][y] === -40);\n        matrix[x][y] = -40;\n\n        for (let dx = -1; dx <= 1; dx++) {\n            for (let dy = -1; dy <= 1; dy++) {\n                if (dx === 0 && dy === 0) continue;\n                const nx = x + dx;\n                const ny = y + dy;\n                if (nx >= 0 && nx < 8 && ny >= 0 && ny < 8 && matrix[nx][ny] !== -40) {\n                    matrix[nx][ny]++;\n                }\n            }\n        }\n    }\n\n    const scoreDiv = document.createElement('div');\n    scoreDiv.className = 'score';\n    scoreDiv.textContent = `Discovered: ${score}`;\n    root.appendChild(scoreDiv);\n\n    function reveal(x, y) {\n        const cellDiv = document.querySelector(`.cell[data-x=\"${x}\"][data-y=\"${y}\"]`);\n        if (cellDiv.classList.contains('visited')) return;\n\n        cellDiv.classList.add('visited');\n        cellDiv.textContent = matrix[x][y];\n\n        if (matrix[x][y] < 0) {\n            cellDiv.textContent = '\ud83d\udca3';\n            alert('Game Over', '\ud83d\udca3 minesweeper');\n        } else {\n            score--;\n            scoreDiv.textContent = `Discovered: ${score}`;\n            if (matrix[x][y] === 0) {\n                for (let dx = -1; dx <= 1; dx++) {\n                    for (let dy = -1; dy <= 1; dy++) {\n                        const nx = x + dx;\n                        const ny = y + dy;\n                        if (nx >= 0 && nx < 8 && ny >= 0 && ny < 8) {\n                            reveal(nx, ny);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (let i = 0; i < 8; i++) {\n        const rowDiv = document.createElement('div');\n        rowDiv.className = 'row';\n        for (let j = 0; j < 8; j++) {\n            const cellDiv = document.createElement('div');\n            cellDiv.className = 'cell';\n            cellDiv.setAttribute('data-x', i);\n            cellDiv.setAttribute('data-y', j);\n            cellDiv.textContent = ' ';\n            cellDiv.addEventListener('click', () => reveal(i, j));\n            rowDiv.appendChild(cellDiv);\n        }\n        root.appendChild(rowDiv);\n    }\n\n    return root;\n}\n",
    "library": "function minesweeper() { ... }\n            x = Math.floor(Math.random() * 8);\n            y = Math.floor(Math.random() * 8);\n"
}