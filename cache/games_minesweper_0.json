{
    "crc": 4241901471,
    "compiled_instruction": "Write only browser JS, JavaScript, HTML and CSS. Document all function declarations using jsdoc.\n### Instruction:\nGiven the following already defined functions:\n /**\n * Register an application on the desktop.\n * \n * @param {string} title - The tooltip text to display when hovering over this application's icon.\n * @param {string} emoji - The emoji to display in this application's icon.\n * @param {function} callback - The callback to call when this application's icon is clicked.\n * @param {number} [width=400] - The width of the application's window in pixels.\n * @param {number} [height=400] - The height of the application's window in pixels.\n * @param {Array<string>} [extensions] - The file extensions to register for this application.\n */\nwindow.os.registerApplication = function(title, emoji, callback, width = 400, height = 400, extensions) { ... }\n\n\n\n Create a callback function `minesweeper` that:\n - creates a root dom element with the class `gmroot`\n - generate a matrix of 8x8 with values 0\n - pick a random of 10 cells and set their value to -40 and increase the number value of the neighbouring cells\n - set score to 64\n - add a div with the class `score` and the content `Discovered: 64` to the root dom element\n - iterate through the matrix and for each row add a div element with the class `.row` and for each item add a div with the class `cell`,  ` ` as content and add data-x and data-y as attributes. when the div is clicked call `reveal` function for the current x and y\n - define internal function reveal that:\n   - get div at x and y using data-x and data-y attributes\n   - if the div is already revealed return\n   - set the div content to the value of the cell and add class `.visited` to the div\n   - if the div has am integer value smaller than 0 set the div content to `\ud83d\udca3` and call `alert` with the message `Game Over` and the title `\ud83d\udca3 minesweeper`\n   - else decrease the score by 1 and update the score div content to `Discovered: ${score}`\n   - if the div has an integer value of 0 call `reveal` for all the neighbouring cells\n - return root element \n### Response:\n",
    "output": "function minesweeper() {\n    // Create root element\n    const root = document.createElement('div');\n    root.className = 'gmroot';\n    \n    // Create matrix of size 8x8 with values 0\n    const matrix = Array(8).fill().map(() => Array(8).fill(0));\n    \n    // Pick 10 random cells and set their value to -40 and increase the number value of the neighbouring cells\n    let mines = [];\n    for (let i = 0; i < 10; i++) {\n        let x = Math.floor(Math.random() * 8);\n        let y = Math.floor(Math.random() * 8);\n        mines.push({x, y});\n        matrix[x][y] = -40;\n        for (let dx = -1; dx <= 1; dx++) {\n            for (let dy = -1; dy <= 1; dy++) {\n                if (dx === 0 && dy === 0) continue;\n                let nx = x + dx;\n                let ny = y + dy;\n                if (nx >= 0 && nx < 8 && ny >= 0 && ny < 8) matrix[nx][ny]++;\n            }\n        }\n    }\n    \n    // Set score to 64\n    let score = 64;\n    \n    // Add score div\n    const scoreDiv = document.createElement('div');\n    scoreDiv.className = 'score';\n    scoreDiv.textContent = `Discovered: ${score}`;\n    root.appendChild(scoreDiv);\n    \n    // Add matrix rows\n    for (let i = 0; i < 8; i++) {\n        const rowDiv = document.createElement('div');\n        rowDiv.className = 'row';\n        for (let j = 0; j < 8; j++) {\n            const cellDiv = document.createElement('div');\n            cellDiv.className = 'cell';\n            cellDiv.textContent = ' ';\n            cellDiv.dataset.x = i;\n            cellDiv.dataset.y = j;\n            cellDiv.addEventListener('click', () => reveal(i, j));\n            rowDiv.appendChild(cellDiv);\n        }\n        root.appendChild(rowDiv);\n    }\n    \n    // Define reveal function\n    const reveal = (x, y) => {\n        let cellDiv = document.querySelector(`div[data-x=\"${x}\"][data-y=\"${y}\"]`);\n        if (cellDiv.classList.contains('visited')) return;\n        let value = matrix[x][y];\n        cellDiv.textContent = value < 0 ? '\ud83d\udca3' : value;\n        cellDiv.classList.add('visited');\n        if (value < 0) {\n            alert('Game Over');\n            return;\n        } else if (value === 0) {\n            for (let dx = -1; dx <= 1; dx++) {\n                for (let dy = -1; dy <= 1; dy++) {\n                    if (dx === 0 && dy === 0) continue;\n                    let nx = x + dx;\n                    let ny = y + dy;\n                    if (nx >= 0 && nx < 8 && ny >= 0 && ny < 8) reveal(nx, ny);\n                }\n            }\n        }\n        score--;\n        scoreDiv.textContent = `Discovered: ${score}`;\n    };\n    \n    return root;\n};\n\n",
    "library": "function minesweeper() { ... }\n"
}