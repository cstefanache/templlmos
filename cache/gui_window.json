{
    "crc": 1377224497,
    "compiled_instruction": [
        "You are an AI programming assistant that generates only JS and CSS code.\n### Instruction:\n The provided code defines a JavaScript function named `titleBar` under the namespace `window.os.gui`. The function creates a title bar element with a title, a close button, and appends it to a parent element. Here are the method signatures for this function:\n\n```javascript\n/**\n * Creates a title bar element with a title, a close button, and appends it to a parent element.\n * @param {HTMLElement} parentElement - The parent element to append the title bar to.\n * @param {string} title - The title to display in the title bar.\n * @param {function} close - The callback function to execute when the close button is clicked.\n */\nwindow.os.gui.titleBar = function(parentElement, title, close) { ... };\n\n```Here are the function signatures prefixed with `window.os.gui`:\n\n```javascript\nwindow.os.gui.makeDraggable = function (root, dragHandle) {}\nwindow.os.gui.makeResizable = function (root, resizeHandleDOMElement) {}\nwindow.os.gui.bringToFront = function (rootDomNode) {}\n\n``` \n\n Define a function called `window.os.gui.createWindow` that takes four parameters: emoji, title, appCallback and width and height that are defaulting to 400 and 300, respectively if not passed and have the following functionality:\n- create a root DOM element with the class `.window`, no styles, and add it to document body in the middle of the document\n- call bringToFront on the root element\n- add and empty div with class `titlePlaceholder` to the root DOM element\n- add and empty div with class `toolbarPlaceholder` to the root DOM element\n- add and empty div with class `contentPlaceholder` to the root DOM element\n- add and empty div with class `statusPlaceholder` to the root DOM element\n- add a resize handle to the root DOM element with class `resizeHandle`\n- add titleBar to `.titlePlaceholder` having the text `emoji + title` and close callback removes root DOM element from the document body\n- append to `contentPlacheolder` the execution of appCallback with the root element as parameter to it\n- call makeDraggable on root element by the `.titlePlaceholder` element\n- make root element resizable by the `resizeHandle` element\n- return root DOM element \n### Response:\n"
    ],
    "output": [
        "Here is how you can define this function in JavaScript:\n\n```javascript\nwindow.os.gui.createWindow = function(emoji = \"\ud83d\udda5\ufe0f\", title = \"New Window\", appCallback = () => {}, width = 400, height = 300) {\n    // Create root DOM element\n    let root = document.createElement(\"div\");\n    root.classList.add(\"window\");\n    document.body.appendChild(root);\n    \n    // Bring window to front\n    window.os.gui.bringToFront(root);\n    \n    // Create placeholders for title bar, toolbar, content, status\n    let titlePlaceholder = document.createElement(\"div\");\n    titlePlaceholder.classList.add(\"titlePlaceholder\");\n    root.appendChild(titlePlaceholder);\n    \n    let toolbarPlaceholder = document.createElement(\"div\");\n    toolbarPlaceholder.classList.add(\"toolbarPlaceholder\");\n    root.appendChild(toolbarPlaceholder);\n    \n    let contentPlaceholder = document.createElement(\"div\");\n    contentPlaceholder.classList.add(\"contentPlaceholder\");\n    root.appendChild(contentPlaceholder);\n    \n    let statusPlaceholder = document.createElement(\"div\");\n    statusPlaceholder.classList.add(\"statusPlaceholder\");\n    root.appendChild(statusPlaceholder);\n    \n    // Create resize handle\n    let resizeHandle = document.createElement(\"div\");\n    resizeHandle.classList.add(\"resizeHandle\");\n    root.appendChild(resizeHandle);\n    \n    // Create title bar\n    window.os.gui.titleBar(titlePlaceholder, emoji + \" \" + title, () => { document.body.removeChild(root); });\n    \n    // Append appCallback to content placeholder\n    contentPlaceholder.appendChild(appCallback(root));\n    \n    // Make window draggable by title placeholder\n    window.os.gui.makeDraggable(root, titlePlaceholder);\n    \n    // Make window resizable by resize handle\n    window.os.gui.makeResizable(root, resizeHandle);\n    \n    // Set width and height of root element\n    root.style.width = width + \"px\";\n    root.style.height = height + \"px\";\n    \n    return root;\n};\n\n```"
    ],
    "library": "The method signature for the `window.os.gui.createWindow` function is as follows:\n\n```javascript\nwindow.os.gui.createWindow : (string, string, function, number, number) => HTMLElement\n\n```"
}