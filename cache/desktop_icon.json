{
    "crc": 1857175483,
    "compiled_instruction": [
        "You are a frontend web developer, do not use jquery that writes only browser JS, JavaScript, HTML and CSS\n### Instruction:\n\n\n Define a function called `icon` on `window.os` namespace that takes three parameters: parent, emoji, title and a callback:\n- create a root DOM element with the class `.icon` and add it to `parent`\n- add a span with the class `.emoji` and the emoji as its content\n- add a span with the class `.title` and the title as its content\n- when the icon is clicked, call the callback \n### Response:\n"
    ],
    "output": [
        "Here is the code in JavaScript:\n\n```javascript\n// Check if window.os exists, if not create it\nif (!window.os) {\n    window.os = {};\n}\n\n// Function to create icon\nwindow.os.icon = function(parent, emoji, title, callback) {\n    // Create root DOM element with class .icon\n    var icon = document.createElement('div');\n    icon.className = 'icon';\n    \n    // Create span with class .emoji and add it to icon\n    var emojiSpan = document.createElement('span');\n    emojiSpan.className = 'emoji';\n    emojiSpan.textContent = emoji;\n    icon.appendChild(emojiSpan);\n    \n    // Create span with class .title and add it to icon\n    var titleSpan = document.createElement('span');\n    titleSpan.className = 'title';\n    titleSpan.textContent = title;\n    icon.appendChild(titleSpan);\n    \n    // Add click event listener to icon\n    icon.addEventListener('click', function() {\n        // Call the callback when the icon is clicked\n        if (callback && typeof(callback) === 'function') {\n            callback();\n        }\n    });\n    \n    // Add icon to the parent element\n    parent.appendChild(icon);\n}\n\n```"
    ],
    "library": "This JavaScript function creates an icon with an emoji and title and attaches a click event listener to it. The function is stored in `window.os` under the name `icon`. \n\nHere's how you can use this function:\n\n```javascript\nwindow.os.icon(document.body, '\ud83d\ude00', 'Smiling Face', function() {\n  console.log('Icon clicked');\n});\n```\nIn this example, an icon with an emoji of '\ud83d\ude00', title 'Smiling Face', and a callback function that logs 'Icon clicked' when clicked, is created and appended to `document.body`. \n\nThe `parent` parameter is the parent element where you want to append this new icon. The `emoji` parameter is the emoji you want to display in your icon. The `title` parameter is the text you want to display in your icon. The `callback` parameter is a function you want to execute when this icon is clicked. \n\nThis function creates an HTML structure like this: \n\n```html\n<div class=\"icon\">\n  <span class=\"emoji\">\ud83d\ude00</span>\n  <span class=\"title\">Smiling Face</span>\n</div>\n```\nAnd then attaches an event listener to this `div` element so when you click on this `div`, your callback function will be executed. \n\nPlease note that this function does not return anything (it returns `undefined`), so you cannot assign its result to any variable or use it in any arithmetic expressions or conditions. If you want to use its result (which is `undefined`), you should pass a function as `callback` parameter and handle its result inside this function.\n\n```",
    "library_input": "### Instruction:\nYou are a javascript developer that documents all the declared functions by providing sample usage.\n```\n // Check if window.os exists, if not create it\nif (!window.os) {\n    window.os = {};\n}\n\n// Function to create icon\nwindow.os.icon = function(parent, emoji, title, callback) {\n    // Create root DOM element with class .icon\n    var icon = document.createElement('div');\n    icon.className = 'icon';\n    \n    // Create span with class .emoji and add it to icon\n    var emojiSpan = document.createElement('span');\n    emojiSpan.className = 'emoji';\n    emojiSpan.textContent = emoji;\n    icon.appendChild(emojiSpan);\n    \n    // Create span with class .title and add it to icon\n    var titleSpan = document.createElement('span');\n    titleSpan.className = 'title';\n    titleSpan.textContent = title;\n    icon.appendChild(titleSpan);\n    \n    // Add click event listener to icon\n    icon.addEventListener('click', function() {\n        // Call the callback when the icon is clicked\n        if (callback && typeof(callback) === 'function') {\n            callback();\n        }\n    });\n    \n    // Add icon to the parent element\n    parent.appendChild(icon);\n}\n\n \n```\n### Response:\n"
}