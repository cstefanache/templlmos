{"compiled_instruction": "Generate browser vanilla JS code without the use of any library or framework.\n### Instruction:\n Create async self executing function that holds an empty object called `runtime` initialized as empty.\nDefine the following methods under the global `window.os` object under `runtime` key:\n* await for call `http://localhost:8080/ping` if the response code is 200 set the `runtime` object to `{online: true}` otherwise set it to `{online: false}` on exception set it to `{online: false}` \n### Response:\n", "output": "Here is a simple example using JavaScript's Fetch API to make HTTP requests and handle responses. This script should be placed in a script tag at the end of your HTML file, so it runs after all other scripts have loaded. \n\n```javascript\n(async () => {\n    window.os = window.os || {};\n    window.os.runtime = {};\n    try {\n        const response = await fetch('http://localhost:8080/ping');\n        if (response.status === 200) {\n            window.os.runtime = { online: true };\n        } else {\n            window.os.runtime = { online: false };\n        }\n    } catch (error) {\n        window.os.runtime = { online: false };\n    }\n})();\n\n```"}