{"compiled_instruction": "Generate browser vanilla JS code without the use of any library or framework.\n### Instruction:\n Create async self executing function that:\nDefine a function on the global `window.os.runtime` under the `compile` key having a single parameter `code` that:\n* await for POST call `http://localhost:8080/compile` with a json body `{\"model\": \"deepseek-coder-6.7b-instruct.Q5_K_M.gguf\", instruction: code}`\n* read the resulted text from the response and store it in a variable called `result`\n* search the script element with ID `dev` and if it exists remove it\n* create a new script element with ID `dev` and set its inner text to the `result`\n* return result \n### Response:\n", "output": "Here is an example of how you can achieve this using JavaScript and Fetch API to make an HTTP request. \n\n```javascript\n// Define the function on window.os.runtime under compile key\nwindow.os.runtime = window.os.runtime || {};\nwindow.os.runtime.compile = async (code) => {\n    // Make an asynchronous POST request to http://localhost:8080/compile with json body {\"model\": \"deepseek-coder-6.7b-instruct.Q5_K_M.gguf\", instruction: code}\n    const response = await fetch('http://localhost:8080/compile', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({model: \"deepseek-coder-6.7b-instruct.Q5_K_M.gguf\", instruction: code})\n    });\n    \n    // Read the resulted text from the response and store it in a variable called result\n    const result = await response.text();\n    \n    // Search the script element with ID 'dev' and if it exists remove it\n    const existingScript = document.getElementById('dev');\n    if (existingScript) {\n        existingScript.remove();\n    }\n    \n    // Create a new script element with ID 'dev' and set its inner text to the result\n    const newScript = document.createElement('script');\n    newScript.id = 'dev';\n    newScript.text = result;\n    document.body.appendChild(newScript);\n    \n    // Return result \n    return result;\n};\n\n```"}