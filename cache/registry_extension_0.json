{
    "crc": 3765931270,
    "compiled_instruction": "Write only browser JS, JavaScript, HTML and CSS. Document all function declarations using jsdoc.\n### Instruction:\nGiven the following already defined functions:\n \n\n create a new function `registerExtension` on `window.os` object that takes an extension, an emoji and a callback function with the following functionality:\n - stores on the `window.os.registry` object the extension as key and emoji and callback as value \n### Response:\n",
    "output": "// Assuming window.os is already defined\nif (!window.os) {\n    window.os = {};\n}\n\n// Assuming window.os.registry is already defined\nif (!window.os.registry) {\n    window.os.registry = {};\n}\n\n/**\n * Register an extension with its corresponding emoji and callback.\n * @param {string} extension - The name of the extension to register.\n * @param {string} emoji - The corresponding emoji for this extension.\n * @param {function} callback - The callback to be executed when this extension is used.\n */\nwindow.os.registerExtension = function(extension, emoji, callback) {\n    window.os.registry[extension] = {emoji: emoji, callback: callback};\n};\n\n",
    "library": "/**\n * Register an extension with its corresponding emoji and callback.\n * @param {string} extension - The name of the extension to register.\n * @param {string} emoji - The corresponding emoji for this extension.\n * @param {function} callback - The callback to be executed when this extension is used.\n */\nwindow.os.registerExtension = function(extension, emoji, callback) { ... }\n"
}