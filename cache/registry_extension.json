{
    "crc": 232421781,
    "compiled_instruction": [
        "You are a frontend web developer, do not use jquery that writes only browser JS, JavaScript, HTML and CSS\n### Instruction:\n\n\n create a new function `registerExtension` on `window.os` object that takes an extension, an emoji and a callback function with the following functionality:\n - stores on the `window.os.registry` object the extension as key and emoji and callback as value \n### Response:\n"
    ],
    "output": [
        "Sure, here is how you can define this in Javascript:\n\n```javascript\n// Check if window.os exists, if not create it\nif (typeof window.os === 'undefined') {\n    window.os = {};\n}\n\n// Check if window.os.registry exists, if not create it\nif (typeof window.os.registry === 'undefined') {\n    window.os.registry = {};\n}\n\n// Define registerExtension function\nwindow.os.registerExtension = function(extension, emoji, callback) {\n    // Store extension, emoji and callback in window.os.registry\n    window.os.registry[extension] = {emoji: emoji, callback: callback};\n};\n\n```"
    ],
    "library": "This JavaScript code defines a function `registerExtension` in the `window.os.registry` object. This function takes three parameters - `extension`, `emoji` and `callback` - and stores them in `window.os.registry` under the `extension` key. \n\nHere's how you can use this function:\n\n```javascript\nwindow.os.registerExtension('myExtension', '\ud83d\ude04', function(data) {\n  console.log('myExtension received data:', data);\n});\n```\nIn this example, `'myExtension'` is used as the key to store the `emoji` and `callback` in `window.os.registry`. The `callback` is a function that will be called when some data is passed to this extension. The `data` passed to this function will be logged to the console in this example. \n\nPlease note that this code assumes you have already defined `window.os` and `window.os.registry` in your code somewhere else in your application. If you haven't, you'll need to do so before using `window.os.registerExtension`. \n\nAlso note that this is a very basic example and doesn't handle any potential errors or edge cases in a real-world application. You might want to add error checking and validation to ensure your code behaves correctly under different circumstances.\n\n```",
    "library_input": "### Instruction:\nYou are a javascript developer that documents all the declared functions by providing sample usage.\n```\n // Check if window.os exists, if not create it\nif (typeof window.os === 'undefined') {\n    window.os = {};\n}\n\n// Check if window.os.registry exists, if not create it\nif (typeof window.os.registry === 'undefined') {\n    window.os.registry = {};\n}\n\n// Define registerExtension function\nwindow.os.registerExtension = function(extension, emoji, callback) {\n    // Store extension, emoji and callback in window.os.registry\n    window.os.registry[extension] = {emoji: emoji, callback: callback};\n};\n\n \n```\n### Response:\n"
}